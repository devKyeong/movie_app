{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","title","summary","poster","genres","year","rating","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gTAoDeA,MA/Cf,YAAkE,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,OAAgBC,GAAQ,EAAhBC,OAAgB,EAARD,MACvD,OACE,yBAAKE,UAAU,SACb,yBAAKC,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,yBAAKM,UAAU,eACb,wBAAIA,UAAU,gBAAgBN,GAC9B,wBAAIM,UAAU,eAAeF,GAC7B,wBAAIE,UAAU,iBAEVH,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACT,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAUT,uBAAGJ,UAAU,kBAAkBL,EAAQY,MAAM,EAAG,KAAhD,UCoCOC,G,kNAxDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZM,QAAQC,IAAIP,GACZ,EAAKQ,SAAS,CAAER,SAAQD,WAAW,IATzB,2C,kEAgBVU,KAAKR,c,+BAIE,MAEuBQ,KAAKX,MAA3BC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,OAEnB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAACkB,GAAD,OACV,kBAAC,EAAD,CACEf,IAAKe,EAAMC,GACXA,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZJ,MAAO2B,EAAM3B,MACbC,QAAS0B,EAAM1B,QACfC,OAAQyB,EAAME,mBACdxB,OAAQsB,EAAMtB,OACdF,OAAQwB,EAAMxB,kB,GAhDZ2B,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.4d7ffc32.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n//state를 이용하지 않을경우 굳이 class Component를 이용할 필요 없음. 해당 컴포넌트는 Movie data를 rend할 목적의 컴포넌트임.\r\n\r\nfunction Movie({ title, summary, poster, genres, rating, year }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {\r\n            genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))\r\n            /* {genres.map((genre, i) => {\r\n            return (\r\n              <Genre key={i} genre={genre} index={i} length={genres.length} />\r\n            );\r\n          })} */\r\n          }\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Genre({ genre, index, length }) {\r\n  if (index + 1 < length) genre += \", \";\r\n\r\n  return (\r\n    <span key={index} className=\"movie__data__genres__genre\">\r\n      {genre}\r\n    </span>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movies from \"./Movie\";\nimport \"./App.css\";\nclass App extends React.Component {\n  //react가 mount할때 아래 state값으로 초기화 되겠지?\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    console.log(movies);\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    //axios.get 이건 비동기야 빠르지않아 기다려야해..\n    //그래서 우리는 javascript(browser)에게 componentDidount 함수가 끝날 때까지 약간 시간이 걸릴 수 있어 라고 전달해서 양해를 구해야해.\n    //그리고 우린 그 tlrksdmf 기다려야해\n    this.getMovies();\n    //const movies = axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n  }\n\n  render() {\n    //isLoading을 from this.state에서 가져올게~\n    const { isLoading, movies } = this.state;\n    //mount -> render -> componentDidMount -> render\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movies\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                rating={movie.rating}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"tomato\"));\n"],"sourceRoot":""}